Future Plans:
	*All plans have been moved down to their proper versions.*
	
Version 1.0 - Release
	Goal: Release!

Version 0.9 - Alpha
	Goal: Do the final tests and package the application for distribution.

Version 0.8 - Beta
	Goal: Fix bugs.

Version 0.7
	Goal: Polish existing features, get rid of hacks if possible, and publish to Codeplex.

Version 0.6
	Goal: Add templates and custom calculation modes.

Version 0.5
	Goal: Add file support.


Version 0.4
	Goal: Add the methods that will do the calculations.
	Work Items:

	Changes:

	Fixes:

Version 0.3
	Goal: Finish the GUI.
	Work Items:
		- Add a NumericUpDown to input the Scenario's target grade - small - done (ScenarioTargetUpDown).
		- Add a ComboBox to input the type of calculation that should be done - small - done (CalculationTypeComboBox).
		- Add Buttons to delete Scenarios and Items, and implement them - small - done.
	Changes:
		- Overloaded DeleteItem() so that you can call it with no arguments.
		- Rewrote ScenarioTree_KeyDown() to use DeleteItem() without arguments (DeleteItemButton_Click() was written this way from the start).
	Fixes:
		- Made sure that the two "delete" buttons are enabled at the right times.

Version 0.2
	Goal: Fix some of the existing GUI problems before moving on.
	Work Items:
	- Create and finish the ItemMarkedColumn, using Decorations to hide checkboxes on Sections - large - done.
	- Redo SelectedScenario as a property - small - done.
	- Add keyboard support to the list and tree, and the ability to delete Scenarios and Items - medium - done.
		- ScenarioList.KeyDown - small - done.
		- ScenarioTree.KeyDown - medium - done.
	- Make sure that the Scenario related buttons are disabled at the right times - medium - done.
		- When Scenarios are added - small - done.
		- When Items are added - small - done.
		- When Scenarios are selected - small - done.
		- When Items are selected - small - done.
		- When Scenarios are deleted - small - done.
		- When Items are deleted - small - done (also resets the Scenario's ItemType if the Scenario is empty).
	Changes:
	- Changed Scenario.Average property to a string, and marked it as a TODO - small.
	- Changed from ScenarioTree.Checkboxes = true to ScenarioTree.UseSubItemCheckboxes = true, in order to create the ItemMarkedColumn - small.
	- Changed ScenarioTree and ScenarioList to use SelectionChanged events instead of SelectedIndexChanged - small.
	- Moved Scenario deletion code to the new DeleteScenario() method.
	- Moved Item deletion code to the new DeleteItem() method.
	Fixes:
	- Fixed an issue that made the ScenarioTree perform atrociously slow with Sections (added the read-only Marked property to Section) - small.
	- Fixed an issue that crashed BareMinimum whenever a subitem checkbox was checked. For some reason, the TreeListView calls GetChildren when this happens, even though it can only happen on a Grade, which doesn't have any children and thus was not previously handled by the GetChildren method - small.

Version 0.1
	Goal: Finish current work items and set future goals.
	Work Items:
	- Finish the empty message overlay styling - small - done (opted for simple text).
	- Set the text for the empty list message - small - done.
	- Work on implementing each of the currently empty/unfinished event handlers - large - done.
		- AddGradeButton_Click - medium - done.
		- AddSectionButton_Click - medium - done.
		- ScenarioTree_SelectedIndexChanged - small - done.
		- ScenarioTree_CellEditStarting - small - done (as far as it can be until the ItemMarkedColumn is finished, see v0.2).
		- ScenarioListView_SelectedIndexChanged - small - done.
	- Make the Grade class functional for the current usage - small - done.
	- Implement GetChildren delegate method - small - done.

Initial Reworking
	- Created the Scenario, Item, Section, and Grade classes.
	- Made the Scenario, Item, and Section classes functional for their basic usages.
	- Set up the ScenarioList and ScenarioTree.
	- Added the FileToolbar.
	- Added the AddScenarioButton, AddSectionButton, and AddGradeButton buttons.